[
    {
        "title": "MCS-024 Assignment 2022-23",
        "slug": "mcs-024-assignment-2022-23",
        "date": "",
        "thumbnail": "",
        "content": "<p><strong>Q1 a. What is Object Oriented Programming? Explain concept of encapsulation with example in java.</strong></p><p><strong>Answer -&nbsp;</strong>Object-oriented programming (OOP) is a programming paradigm that uses objects and their interactions to design applications and computer programs. It is based on the concept of objects, which can contain data and code to manipulate that data. OOP languages, such as Java, provide built-in support for encapsulation, which is a fundamental concept in OOP.</p><p>Encapsulation is the process of hiding the internal details of an object from the outside world, and only exposing a public interface for interacting with the object. This allows for greater control over how data is accessed and modified, and helps to protect the integrity of the data.</p><p>For example, in Java, a class can be used to encapsulate the data and methods of an object. The data (also known as instance variables) can be made private, and accessed only through public methods (also known as getters and setters). This ensures that the data can only be modified in a controlled way, and that any changes made to the data are properly handled.</p><p>Here is an example of encapsulation in Java:</p><p><img src=\"https://i.ibb.co/gvQSbnw/Screenshot-403.png\" alt=\"Screenshot-403\" width=\"100%\" border=\"0\"></p><p>In this example, the class BankAccount encapsulates the data (balance) and methods (deposit, withdraw, getBalance) for a bank account. The balance is private and can only be accessed or modified through the public methods.</p><p><strong>Q1 (b) Explain use of different operators available in java.</strong></p><p><strong>Ans:</strong> Java provides a variety of operators that can be used to perform different types of operations on variables and expressions. Some of the most commonly used operators include:</p><ol><li><strong>Arithmetic operators:</strong> These operators are used to perform mathematical operations such as addition, subtraction, multiplication, and division. For example, the <strong>+</strong> operator is used to add two numbers together and the <strong>*</strong> operator is used to multiply them.</li><li><strong>Comparison operators:</strong> These operators are used to compare two values and return a boolean value indicating whether the comparison is true or false. For example, the <strong>==</strong> operator is used to check if two values are equal, and the <strong>&gt;</strong> operator is used to check if one value is greater than the other.</li><li><strong>Logical operators:</strong> These operators are used to combine multiple boolean expressions and return a single boolean value. For example, the &amp;&amp; operator is used to check if two boolean expressions are both true and the || operator is used to check if at least one of them is true.</li><li><strong>Ternary operator:</strong> This operator is a shorthand for an if-else statement and is used to assign a value to a variable based on a condition. The syntax is <strong>(condition) ? value_if_true : value_if_false</strong></li><li><strong>Bitwise operators:</strong> These operators are used to perform bit-level manipulation on integers. For example, the &amp; operator is used to perform a bitwise <strong>AND</strong> operation and the <strong>|</strong> operator is used to perform a bitwise OR operation.</li><li><strong>Assignment operators:</strong> These operators are used to assign a value to a variable. For example, the = operator is used to assign a value to a variable, the += operator is used to add a value to a variable and then assign it.</li><li><strong>Type comparison operator:</strong> This operator instanceof is used to check the type of an object at runtime. It returns true if an object is an instance of the specified class or one of its subclasses.</li></ol>",
        "author": "Dilkhush Raj",
        "visible": true
    },
    {
        "title": "check",
        "slug": "",
        "date": "",
        "thumbnail": "",
        "content": "",
        "author": "",
        "visible": true
    },
    {
        "title": "",
        "slug": "",
        "date": "",
        "thumbnail": "",
        "content": "",
        "author": "",
        "visible": false
    }
]